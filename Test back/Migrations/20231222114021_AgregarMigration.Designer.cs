// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_back.Modelos;

#nullable disable

namespace Test_back.Migrations
{
    [DbContext(typeof(RestocrudContext))]
    [Migration("20231222114021_AgregarMigration")]
    partial class AgregarMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test_back.Modelos.Ceo", b =>
                {
                    b.Property<int>("Ceoid")
                        .HasColumnType("int")
                        .HasColumnName("CEOID");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("Ceoid")
                        .HasName("PK__CEO__5D8217436A693392");

                    b.HasIndex("RolId");

                    b.ToTable("CEO", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.DetalleVentum", b =>
                {
                    b.Property<int>("VentaId")
                        .HasColumnType("int")
                        .HasColumnName("VentaID");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("VentaId", "MenuId")
                        .HasName("PK__DETALLE___47D8BC69A480D92C");

                    b.HasIndex("MenuId");

                    b.ToTable("DETALLE_VENTA", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Gerente", b =>
                {
                    b.Property<int>("GerenteId")
                        .HasColumnType("int")
                        .HasColumnName("GerenteID");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("GerenteId")
                        .HasName("PK__GERENTES__64E13472F4EF1238");

                    b.HasIndex("RolId");

                    b.ToTable("GERENTES", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("MenuId")
                        .HasName("PK__MENU__C99ED250A5C18D2A");

                    b.ToTable("MENU", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Mesa", b =>
                {
                    b.Property<int>("MesaId")
                        .HasColumnType("int")
                        .HasColumnName("MesaID");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("IsOccupied")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("MozoId")
                        .HasColumnType("int")
                        .HasColumnName("MozoID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MesaId")
                        .HasName("PK__MESAS__6A4196C82224C6D3");

                    b.HasIndex("MozoId");

                    b.ToTable("MESAS", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Mozo", b =>
                {
                    b.Property<int>("MozoId")
                        .HasColumnType("int")
                        .HasColumnName("MozoID");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int")
                        .HasColumnName("TurnoID");

                    b.HasKey("MozoId")
                        .HasName("PK__MOZOS__A01CDF5C4FC7A688");

                    b.HasIndex("RolId");

                    b.HasIndex("TurnoId");

                    b.ToTable("MOZOS", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolId")
                        .HasName("PK__ROL__F92302D1C9FC0871");

                    b.ToTable("ROL", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .HasColumnType("int")
                        .HasColumnName("TurnoID");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("TurnoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TurnoId")
                        .HasName("PK__TURNOS__AD3E2EB4CA9AABB7");

                    b.ToTable("TURNOS", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .HasColumnType("int")
                        .HasColumnName("VentaID");

                    b.Property<int?>("MozoId")
                        .HasColumnType("int")
                        .HasColumnName("MozoID");

                    b.Property<DateOnly?>("SaleDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("VentaId")
                        .HasName("PK__VENTAS__5B41514CAF98D370");

                    b.HasIndex("MozoId");

                    b.ToTable("VENTAS", (string)null);
                });

            modelBuilder.Entity("Test_back.Modelos.Ceo", b =>
                {
                    b.HasOne("Test_back.Modelos.Rol", "Rol")
                        .WithMany("Ceos")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK__CEO__RolID__2B3F6F97");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Test_back.Modelos.DetalleVentum", b =>
                {
                    b.HasOne("Test_back.Modelos.Menu", "Menu")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__DETALLE_V__MenuI__403A8C7D");

                    b.HasOne("Test_back.Modelos.Venta", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("VentaId")
                        .IsRequired()
                        .HasConstraintName("FK__DETALLE_V__Venta__3F466844");

                    b.Navigation("Menu");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Test_back.Modelos.Gerente", b =>
                {
                    b.HasOne("Test_back.Modelos.Rol", "Rol")
                        .WithMany("Gerentes")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK__GERENTES__RolID__276EDEB3");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Test_back.Modelos.Mesa", b =>
                {
                    b.HasOne("Test_back.Modelos.Mozo", "Mozo")
                        .WithMany("Mesas")
                        .HasForeignKey("MozoId")
                        .HasConstraintName("FK__MESAS__MozoID__3C69FB99");

                    b.Navigation("Mozo");
                });

            modelBuilder.Entity("Test_back.Modelos.Mozo", b =>
                {
                    b.HasOne("Test_back.Modelos.Rol", "Rol")
                        .WithMany("Mozos")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK__MOZOS__RolID__33D4B598");

                    b.HasOne("Test_back.Modelos.Turno", "Turno")
                        .WithMany("Mozos")
                        .HasForeignKey("TurnoId")
                        .IsRequired()
                        .HasConstraintName("FK__MOZOS__TurnoID__34C8D9D1");

                    b.Navigation("Rol");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Test_back.Modelos.Venta", b =>
                {
                    b.HasOne("Test_back.Modelos.Mozo", "Mozo")
                        .WithMany("Venta")
                        .HasForeignKey("MozoId")
                        .HasConstraintName("FK__VENTAS__MozoID__37A5467C");

                    b.Navigation("Mozo");
                });

            modelBuilder.Entity("Test_back.Modelos.Menu", b =>
                {
                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("Test_back.Modelos.Mozo", b =>
                {
                    b.Navigation("Mesas");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Test_back.Modelos.Rol", b =>
                {
                    b.Navigation("Ceos");

                    b.Navigation("Gerentes");

                    b.Navigation("Mozos");
                });

            modelBuilder.Entity("Test_back.Modelos.Turno", b =>
                {
                    b.Navigation("Mozos");
                });

            modelBuilder.Entity("Test_back.Modelos.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
